/* src/index.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Your custom styles below */
/* You can keep some global styles here if needed */
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* Basic modal styling */
.modal-overlay {
  @apply fixed inset-0 flex items-center justify-center bg-black/50 z-50;
}

.modal-container {
  @apply bg-white dark:bg-gray-800 rounded-lg shadow-lg w-11/12 max-w-md overflow-hidden;
}

.modal-header {
  @apply px-4 py-3 border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700;
}

.modal-body {
  @apply p-4;
}

.modal-footer {
  @apply px-4 py-3 bg-gray-50 dark:bg-gray-700 border-t border-gray-200 dark:border-gray-700 flex justify-end gap-2;
}

.modal-button {
  @apply px-4 py-2 rounded-md font-medium transition-colors;
}

.modal-button.cancel {
  @apply bg-gray-500 text-white hover:bg-gray-600;
}

.modal-button.confirm {
  @apply bg-indigo-600 text-white hover:bg-indigo-700 disabled:opacity-50;
}

/* Node connection handle styling */
.custom-handle {
  @apply cursor-pointer;
  transition: transform 0.15s, box-shadow 0.15s;
}

.custom-handle:hover {
  transform: scale(1.25);
  box-shadow: 0 0 0 2px #fff, 0 0 6px rgba(59, 130, 246, 0.8);
}

@keyframes dash {
  to {
    stroke-dashoffset: -10;
  }
}

.react-flow__connection-path {
  stroke-dasharray: 5;
}

.react-flow__edge-path.animated {
  animation: dash 1s linear infinite;
  stroke-dasharray: 5;
}



/* Add these styles to your src/index.css file */

/* Enhanced handle styling for better interaction */
.component-handle,
.container-handle,
.diamond-handle,
.circle-handle,
.hexagon-handle,
.triangle-handle {
  cursor: crosshair !important;
  transition: all 0.15s ease !important;
  pointer-events: all !important;
}

.component-handle:hover,
.container-handle:hover,
.diamond-handle:hover,
.circle-handle:hover,
.hexagon-handle:hover,
.triangle-handle:hover {
  transform: scale(1.4) !important;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3), 0 0 8px rgba(59, 130, 246, 0.6) !important;
  background: #1d4ed8 !important;
  z-index: 1000 !important;
}

/* Connection line styling */
.react-flow__connection-line {
  stroke: #2563eb;
  stroke-width: 2px;
  stroke-dasharray: 8, 4;
  animation: dash 1s linear infinite;
}

.react-flow__connection-line circle {
  fill: #2563eb;
  stroke: #ffffff;
  stroke-width: 2px;
  r: 4;
}

/* Enhanced animation for connection line */
@keyframes dash {
  0% {
    stroke-dashoffset: 0;
  }

  100% {
    stroke-dashoffset: -12;
  }
}

/* Make sure handles are always clickable */
.react-flow__handle {
  pointer-events: all !important;
}

.react-flow__handle-connecting {
  background: #ff6b6b !important;
  transform: scale(1.5) !important;
}

.react-flow__handle-valid {
  background: #51cf66 !important;
  transform: scale(1.3) !important;
}

/* Improve edge selection */
.react-flow__edge.selected .react-flow__edge-path {
  stroke: #2563eb !important;
  stroke-width: 3px !important;
}

/* Better visual feedback for connecting */
.react-flow__node.connecting {
  box-shadow: 0 0 0 2px #2563eb !important;
}

/* Ensure proper layering */
.react-flow__handle {
  z-index: 100 !important;
}

.react-flow__handle.source {
  z-index: 101 !important;
}

.react-flow__handle.target {
  z-index: 102 !important;
}

/* Add these styles to your src/index.css for better intersection visualization */

/* Enhanced edge path styling */
.react-flow__edge-path {
  transition: all 0.2s ease;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke-width: 3px !important;
  filter: drop-shadow(0 0 4px rgba(37, 99, 235, 0.3));
}

/* Control point styling */
.react-flow__edge .react-flow__edge-label circle {
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
  transition: all 0.15s ease;
}

.react-flow__edge .react-flow__edge-label circle:hover {
  transform: scale(1.1);
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.15));
}

/* Edge label styling */
.react-flow__edge-label {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
}

/* Intersection jump styling enhancements */
.react-flow__edge[data-intersection="arc"] .react-flow__edge-path {
  stroke-linecap: round;
  stroke-linejoin: round;
}

.react-flow__edge[data-intersection="sharp"] .react-flow__edge-path {
  stroke-linecap: square;
  stroke-linejoin: miter;
}

/* Enhanced property editor section for intersection */
.intersection-preview {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-top: 4px;
  padding: 8px;
  background: #f8f9fa;
  border-radius: 4px;
  font-size: 11px;
  color: #666;
}

.intersection-preview svg {
  width: 24px;
  height: 16px;
}

/* Connection line preview styles */
.connection-preview {
  margin-top: 8px;
  padding: 12px;
  background: #f8f9fa;
  border-radius: 6px;
  border: 1px solid #e9ecef;
}

.connection-preview svg {
  width: 100%;
  height: 40px;
}

/* Improved form styling for edge properties */
.edge-property-section {
  background: #f8f9fa;
  border-radius: 8px;
  padding: 12px;
  margin: 8px 0;
}

.edge-property-section h4 {
  margin: 0 0 8px 0;
  font-size: 12px;
  font-weight: 600;
  color: #495057;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Style the intersection type buttons */
.intersection-type-buttons {
  display: flex;
  gap: 4px;
  margin-top: 8px;
}

.intersection-type-button {
  flex: 1;
  padding: 6px 8px;
  border: 1px solid #dee2e6;
  background: white;
  border-radius: 4px;
  font-size: 11px;
  cursor: pointer;
  transition: all 0.15s ease;
  text-align: center;
}

.intersection-type-button:hover {
  background: #f8f9fa;
  border-color: #adb5bd;
}

.intersection-type-button.active {
  background: #007bff;
  color: white;
  border-color: #007bff;
}

/* Enhanced visual feedback for edge editing */
.react-flow__edge.editing {
  pointer-events: all;
}

.react-flow__edge.editing .react-flow__edge-path {
  stroke-dasharray: 4, 4;
  animation: dash 1s linear infinite;
}

/* Better visual hierarchy in property panel */
.property-section-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 12px;
}

.property-section-header .icon {
  font-size: 14px;
  opacity: 0.7;
}

/* Add these styles to src/index.css for better intersection visual effects */

/* Enhanced edge path animations */
.react-flow__edge-path {
  transition: stroke-dasharray 0.3s ease, stroke-width 0.2s ease;
}

.react-flow__edge-path:hover {
  stroke-width: 3;
}

/* Intersection jump styling */
.intersection-jump {
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
}

/* Control point hover effects */
.control-point {
  transition: all 0.2s ease;
  cursor: grab;
}

.control-point:hover {
  r: 8;
  filter: drop-shadow(0 2px 4px rgba(59, 130, 246, 0.3));
}

.control-point:active {
  cursor: grabbing;
  filter: drop-shadow(0 1px 2px rgba(59, 130, 246, 0.5));
}

/* Enhanced selection indicators */
.selection-indicator {
  animation: pulse 2s infinite;
}

@keyframes pulse {

  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0.5;
  }
}

/* Intersection style preview animations */
.intersection-preview {
  transition: all 0.2s ease;
}

.intersection-preview:hover {
  transform: scale(1.05);
}

/* Edge label improvements */
.edge-label {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(4px);
  border: 1px solid rgba(0, 0, 0, 0.1);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease;
}

/* Smooth edge intersections */
.react-flow__edge.intersection-arc path {
  stroke-linecap: round;
  stroke-linejoin: round;
}

.react-flow__edge.intersection-sharp path {
  stroke-linejoin: miter;
  stroke-miterlimit: 4;
}


.dark .react-flow__viewport {
  background-color: transparent;
}

.react-flow__node {
  transition: filter 0.2s ease;
}

.dark .react-flow__node {
  filter: brightness(0.85);
}

/* Draw.io-style connection points */
.drawio-connection-point {
  opacity: 0;
  transform: scale(0.8);
  transition: all 0.2s ease;
  cursor: crosshair;
}
.drawio-connection-point:hover {
  opacity: 1 !important;
  transform: scale(1.2) !important;
  box-shadow: 0 0 8px rgba(59, 130, 246, 0.6) !important;
}
.react-flow__node:hover .drawio-connection-point {
  opacity: 0.6;
  transform: scale(1);
}

/* Technical Details Panel */
.technical-details-panel {
    position: fixed;
    right: 20px;
    top: 20px;
    width: 350px;
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 16px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    z-index: 1000;
    max-height: 80vh;
    overflow-y: auto;
}

.panel-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
    padding-bottom: 8px;
    border-bottom: 1px solid #eee;
}

.panel-content {
    space-y: 3;
}

.tech-specs {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.spec-item {
    display: flex;
    justify-content: space-between;
    padding: 8px 0;
    border-bottom: 1px solid #f0f0f0;
}

.spec-label {
    font-weight: 600;
    color: #666;
    font-size: 14px;
}

.spec-value {
    color: #333;
    font-family: 'Courier New', monospace;
    font-size: 13px;
    text-align: right;
    max-width: 200px;
    word-wrap: break-word;
}

/* Technical Badges */
.tech-badges {
    display: flex;
    gap: 4px;
    margin: 8px 0;
}

.badge {
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 10px;
    font-weight: 600;
    text-transform: uppercase;
    white-space: nowrap;
}

.badge.protocol {
    background: #e3f2fd;
    color: #1976d2;
}

.badge.performance {
    background: #f3e5f5;
    color: #7b1fa2;
}

.badge.security {
    background: #e8f5e8;
    color: #388e3c;
}

.badge.scaling {
    background: #fff3e0;
    color: #f57c00;
}

.badge.infrastructure {
    background: #fce4ec;
    color: #c2185b;
}

.badge.monitoring {
    background: #f1f8e9;
    color: #689f38;
}

/* Technical Tooltip */
.technical-tooltip {
    pointer-events: none;
}

.tooltip-content {
    pointer-events: auto;
}

/* Component Node Enhancements */
.component-node {
    position: relative;
}

.component-node .technical-badges {
    position: absolute;
    top: 4px;
    right: 4px;
    z-index: 10;
}

.component-node .technical-badges .badge {
    font-size: 8px;
    padding: 1px 3px;
    line-height: 1;
}

/* Line clamp utility */
.line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}